<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on Sujay Pillai</title>
    <link>https://sujaypillai.dev/categories/cloud/</link>
    <description>Recent content in Cloud on Sujay Pillai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 21 Aug 2020 12:10:56 +0800</lastBuildDate>
    
	<atom:link href="https://sujaypillai.dev/categories/cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrating from AWS to Azure</title>
      <link>https://sujaypillai.dev/2020/08/2020-08-21-migrating-from-aws-to-azure-copy/</link>
      <pubDate>Fri, 21 Aug 2020 12:10:56 +0800</pubDate>
      
      <guid>https://sujaypillai.dev/2020/08/2020-08-21-migrating-from-aws-to-azure-copy/</guid>
      <description>Last week Docker released its first Github Action called docker/build-push-action . This has been developed by Docker after keeping into consideration to simplify basic workflow of: building an image, tagging it, logging into Docker Hub, and pushing the image to a registry.
My previous blog Docker images on Github Package Registry showcased how we could achieve the above workflow with Github package registry. If you look at the workflow definition dockerimage.</description>
    </item>
    
    <item>
      <title>Creating an EC2 instance using CLI</title>
      <link>https://sujaypillai.dev/2020/08/2020-08-16-creating-an-ec2-instance-using-cli/</link>
      <pubDate>Mon, 17 Aug 2020 12:10:56 +0800</pubDate>
      
      <guid>https://sujaypillai.dev/2020/08/2020-08-16-creating-an-ec2-instance-using-cli/</guid>
      <description>Find the image id corresponding to Amazon Linux 2 AMI 1 2 3 4 5  aws ec2 describe-images --owners amazon \ --filters &amp;#39;Name=name,Values=amzn2-ami-hvm-2.0.????????-x86_64-gp2&amp;#39; &amp;#39;Name=state,Values=available&amp;#39; \ --output json | jq -r &amp;#39;.Images | sort_by(.CreationDate) | last(.[]).ImageId&amp;#39; ami-01f7527546b557442   Create a security group 1 2 3 4 5  aws ec2 create-security-group --group-name docker-machine --description &amp;#34;Docker Machine&amp;#34; { &amp;#34;GroupId&amp;#34;:&amp;#34;sg-0f1144719b279f8cb&amp;#34; }   Open port 22 (SSH protocol)to connect to your instance.</description>
    </item>
    
    <item>
      <title>Running Hugo in Docker &#43; Traefik</title>
      <link>https://sujaypillai.dev/2020/08/2020-08-17-setting-up-blog-on-aws-using-traefik-docker-copy/</link>
      <pubDate>Mon, 17 Aug 2020 12:10:56 +0800</pubDate>
      
      <guid>https://sujaypillai.dev/2020/08/2020-08-17-setting-up-blog-on-aws-using-traefik-docker-copy/</guid>
      <description>This post basically highlights how you can setup your blogging site (or any static website) using Hugo running in a Docker Swarm environment with Traefik. This whole setup is done on AWS, but it could be replicated to any cloud service provider.</description>
    </item>
    
  </channel>
</rss>